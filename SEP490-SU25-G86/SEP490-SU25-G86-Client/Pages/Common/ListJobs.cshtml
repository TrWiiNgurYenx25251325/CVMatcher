@page
@model SEP490_SU25_G86_Client.Pages.Common.ListJobsModel
@{
    Layout = "_Layout";
}
<!-- ... phần HTML như đã viết ở trên -->
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />
<div class="container-fluid py-4">
    <div class="row">
        <!-- Filter Sidebar -->
        <div class="col-md-3">
            <div class="border rounded p-3 bg-white">
                <form method="get" class="mb-4">
                <!-- Search-->
                <h5 class="mb-3">Tìm kiếm vị trí tuyển dụng</h5>
                        <input type="text" name="keyword" class="form-control mb-3" placeholder="Vị trí tuyển dụng" value="@Model.Keyword" />
                <!-- Location-->
                <h6 class="mt-4">Địa điểm</h6>
                <select class="form-select mb-3" name="provinceId">
                    <option value="">Chọn thành phố</option>
                    @foreach (var province in Model.Provinces)
                    {
                        <option value="@province.ProvinceId">@province.ProvinceName</option>
                    }
                </select>
                <!-- Category Type -->
                <h6 class="mt-4">Theo danh mục nghề</h6>
                <select class="form-select mb-3" name="industryId">
                    <option value="">Chọn danh mục nghề</option>
                    @foreach (var industry in Model.Industries)
                    {
                        <option value="@industry.IndustryId">@industry.IndustryName</option>
                    }
                </select>

                <!-- Job Type -->
                    <h6 class="fw-bold">Hình thức việc làm</h6>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="jobtype-all" name="employmentTypeIds" value="">
                        <label class="form-check-label">Tất cả</label>
                    </div>

                    <!-- Toàn thời gian (employmentTypeId = 1) -->
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="jobtype-full" name="employmentTypeIds" value="1">
                        <label class="form-check-label" >Toàn thời gian</label>
                    </div>

                    <!-- Bán thời gian (employmentTypeId = 2) -->
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="jobtype-part" name="employmentTypeIds" value="2">
                        <label class="form-check-label" >Bán thời gian</label>
                    </div>

                <!-- Experience Level -->
                <h6 class="fw-bold">Kinh nghiệm</h6>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="experienceLevelIds" value="" id="exp-all">
                        <label class="form-check-label" for="exp-all">Tất cả</label>
                    </div>
                    @foreach (var exp in Model.ExperienceLevels)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="experienceLevelIds" value="@exp.ExperienceLevelId" id="exp-@exp.ExperienceLevelId">
                            <label class="form-check-label" for="exp-@exp.ExperienceLevelId">@exp.ExperienceLevelName</label>
                        </div>
                    }

                <!-- Date Posted -->
                <h6 class="fw-bold">Ngày đăng</h6>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="datePostedRanges" value="" id="date-24h">
                        <label class="form-check-label" for="date-24h">Tất cả</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="datePostedRanges" value="1" id="date-24h">
                        <label class="form-check-label" for="date-24h">Mới nhất hôm nay</label>
                    </div>

                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="datePostedRanges" value="7" id="date-7d">
                        <label class="form-check-label" for="date-7d">Mới nhất tuần này</label>
                    </div>

                    <div class="form-check mb-3">
                        <input type="checkbox" class="form-check-input" name="datePostedRanges" value="30" id="date-30d">
                        <label class="form-check-label" for="date-30d">Mới nhất trong tháng</label>
                    </div>

                <!-- Salary -->
                <h6 class="fw-bold">Mức lương</h6>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="salary_range" value=" ">
                        <label class="form-check-label">Tất cả</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="salary_range" value="5-10">
                        <label class="form-check-label">5–10 triệu VND</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="salary_range" value="10-15">
                        <label class="form-check-label">10–15 triệu VND</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="salary_range" value="15-20">
                        <label class="form-check-label">15–20 triệu VND</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="salary_range" value="20-30">
                        <label class="form-check-label">20–30 triệu VND</label>
                    </div>
                    <!-- Input salary -->
                    <div class="d-flex align-items-center mb-2">
                        <input type="number" id="salary_min" class="form-control form-control-sm me-2"
                               placeholder="Từ" name="salary_min" style="width: 80px;"
                               value="@Model.MinSalaryInput" min="1" />
                        <span class="me-2">-</span>
                        <input type="number" id="salary_max" class="form-control form-control-sm me-2"
                               placeholder="Đến" name="salary_max" style="width: 80px;"
                               value="@Model.MaxSalaryInput" min="1" />
                        <span>Triệu</span>
                    </div>
                    <button id="applyBtn" type="submit" class="btn btn-success w-100 mt-3">Áp dụng</button>
                </form>
            </div>
        </div>

        <!-- Job Listing -->
        <div class="col-md-9">
            <div class="d-flex justify-content-between align-items-center mb-3">
                @* <span>Hiển thị @Model.TotalItems kết quả</span> *@
                @* <select class="form-select w-auto">
                    <option selected>Sort by latest</option>
                </select> *@
            </div>

            @foreach (var job in Model.Jobs)
            {
                <div class="joblist-card">
                    <!-- Logo + Thông tin -->
                    <div class="d-flex align-items-start">
                        <!-- Logo công ty -->
                        <img src="@job.CompanyLogoUrl"
                             alt="@job.CompanyName"
                             class="rounded"
                             style="width: 80px; height: 80px; object-fit: cover; cursor: pointer;"
                             onclick="window.location.href='/Common/CompanyDetail?id=@job.CompanyId'">

                        <!-- Phần thông tin job -->
                        <div class="ms-3">
                            <h5 class="fw-bold mb-1">
                                <a href="/Job/DetailJobPost/@job.JobPostId" class="fw-bold mb-1 job-title">
                                    @job.Title
                                </a>
                            </h5>
                            <div class="text-muted">
                                <a href="/Common/CompanyDetail?id=@job.CompanyId" class="text-decoration-none text-muted">
                                    @job.CompanyName
                                </a>
                            </div>

                            <div class="d-flex flex-wrap mt-2 gap-3">
                                <span class="text-secondary"><i class="bi bi-building"></i> @job.Category</span>
                                <span class="text-secondary"><i class="bi bi-clock"></i> @job.JobType</span>
                                <span class="text-secondary"><i class="bi bi-currency-dollar"></i> @job.SalaryRange</span>
                                <span class="text-secondary"><i class="bi bi-person-workspace"></i> @job.Experience</span>
                                <span class="text-secondary"><i class="bi bi-geo-alt"></i> @job.Location</span>
                            </div>
                        </div>
                    </div>

                    <!-- Nút & Ngày đăng -->
                    <div class="d-flex flex-column align-items-end gap-2">
                        <div class="d-flex align-items-center gap-2">
                            <a class="btn btn-custom btn-sm btn-fixed" href="/Job/DetailJobPost/@job.JobPostId">Chi tiết</a>
                            @if (job.IsApplied)
                            {
                                <button class="btn btn-custom btn-sm btn-fixed" disabled>Đã ứng tuyển</button>
                            }
                            else
                            {
                                <button type="button"
                                        class="btn btn-primary btn-sm btn-apply-now btn-fixed"
                                        data-job-id="@job.JobPostId"
                                        data-job-title="@job.Title">
                                    <i class="bi bi-send"></i> Ứng tuyển
                                </button>
                            }
                        </div>
                        <div class="text-muted small">@job.DaysSincePostedOrUpdated</div>
                    </div>
                </div>
            }

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <div class="d-flex justify-content-center mt-4">
                    <nav>
                        <ul class="pagination">
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@BuildQuery(Model.CurrentPage - 1)">←</a>
                                </li>
                            }

                            <li class="page-item disabled">
                                <span class="page-link">@Model.CurrentPage / @Model.TotalPages</span>
                            </li>

                            @if (Model.CurrentPage < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@BuildQuery(Model.CurrentPage + 1)">→</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal ứng tuyển -->
<div class="modal fade" id="applyModal" tabindex="-1" aria-labelledby="applyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="applyModalTitle">Ứng tuyển</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div>
                    <h6>Chọn CV để ứng tuyển</h6>
                    <div id="cvList">
                        @if (Model.MyCvs != null && Model.MyCvs.Count > 0)
                        {
                            <table class="table table-hover align-middle">
                                <thead>
                                    <tr>
                                        <th style="width: 60%;">Tên CV</th>
                                        <th style="width: 30%;">Ngày cập nhật</th>
                                        <th style="width: 10%;"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var cv in Model.MyCvs)
                                    {
                                        <tr id="cv-row-@cv.CvId">
                                            <td>@cv.CVName</td>
                                            <td>@(cv.UpdatedDate?.ToString("dd-MM-yyyy HH:mm") ?? "")</td>
                                            <td>
                                                <button type="button" class="btn btn-outline-primary btn-sm" onclick="selectCv('@cv.CvId')">Chọn CV</button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <div class="text-danger">Bạn chưa có CV nào. Vui lòng upload CV mới!</div>
                        }
                    </div>
                </div>
                <hr />
                <div>
                    <h6>Tải CV lên từ thiết bị</h6>
                    <input type="file" id="uploadCvInput" accept="application/pdf" />
                    <div class="mt-2">
                        <label for="uploadCvName" class="form-label">Tên CV</label>
                        <input type="text" id="uploadCvName" class="form-control" placeholder="Nhập tên CV" />
                    </div>
                    <div class="mt-2">
                        <label for="uploadCvNotes" class="form-label">Ghi chú</label>
                        <textarea id="uploadCvNotes" class="form-control" placeholder="Nhập ghi chú (tuỳ chọn)"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" id="btnSubmitApplication">Nộp Hồ Sơ Ứng Tuyển</button>
            </div>
        </div>
    </div>
</div>
<div id="uploadSpinner" style="display:none;position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:9999;background:rgba(255,255,255,0.7);align-items:center;justify-content:center;flex-direction:column;">
    <div class="spinner-border text-primary" role="status" style="width:3rem;height:3rem;">
        <span class="visually-hidden">Đang tải lên...</span>
    </div>
    <div style="margin-top:16px;font-size:18px;">Đang tải lên CV, vui lòng chờ...</div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
@functions {
    string BuildQuery(int page)
    {
        var query = $"?page={page}";
        if (!string.IsNullOrWhiteSpace(Request.Query["keyword"]))
        {
            var keyword = Request.Query["keyword"].ToString();
            query += $"&keyword={Uri.EscapeDataString(keyword)}";
        }
        if (Model.ProvinceId != null)
            query += $"&provinceId={Model.ProvinceId}";
        if (Model.IndustryId != null)
            query += $"&industryId={Model.IndustryId}";
        if (Request.Query["employmentTypeIds"].Count > 0)
        {
            foreach (var id in Request.Query["employmentTypeIds"])
            {
                query += $"&employmentTypeIds={id}";
            }
        }
        if (Request.Query["experienceLevelIds"].Count > 0)
        {
            foreach (var id in Request.Query["experienceLevelIds"])
            {
                query += $"&experienceLevelIds={id}";
            }
        }
        if (Request.Query["datePostedRange"].Count > 0)
        {
            foreach (var id in Request.Query["datePostedRange"])
            {
                query += $"&datePostedRange={id}";
            }
        }
        if (Request.Query["salary_range"].Count > 0)
        {
            foreach (var range in Request.Query["salary_range"])
            {
                query += $"&salary_range={range}";
            }
        }
        if (Request.Query["salary_min"].Count > 0)
        {
            foreach (var min in Request.Query["salary_min"])
            {
                query += $"&salary_min={min}";
            }
        }

        if (Request.Query["salary_max"].Count > 0)
        {
            foreach (var max in Request.Query["salary_max"])
            {
                query += $"&salary_max={max}";
            }
        }
        return query;
    }
}
@section Scripts {
    <script>
        const jwtToken = '@HttpContext.Session.GetString("jwt_token")';
        let selectedCvId = null;
        let candidateId = '@HttpContext.Session.GetString("userId")';
        let currentJobPostId = null;

        // Gán sự kiện cho tất cả các nút "Ứng tuyển ngay"
        document.querySelectorAll('.btn-apply-now').forEach(button => {
            button.addEventListener('click', function () {
                if (!candidateId) {
                    window.location.href = '/Common/Login?returnUrl=' + encodeURIComponent(window.location.pathname);
                    return;
                }

                currentJobPostId = this.getAttribute('data-job-id');
                const jobTitle = this.getAttribute('data-job-title');

                document.getElementById('applyModalTitle').textContent = "Ứng tuyển " + jobTitle;
                var modal = new bootstrap.Modal(document.getElementById('applyModal'));
                modal.show();
            });
        });

        // Chọn CV có sẵn
        window.selectCv = function (cvId) {
            selectedCvId = cvId;
            document.querySelectorAll('#cvList tr').forEach(tr => tr.classList.remove('selected'));
            var row = document.getElementById('cv-row-' + cvId);
            if (row) row.classList.add('selected');
        };

        // Nút "Gửi ứng tuyển"
        document.getElementById('btnSubmitApplication').addEventListener('click', function () {
            if (!currentJobPostId) {
                alert('Không xác định được công việc.');
                return;
            }

            if (selectedCvId) {
                // Nộp bằng CV đã có
                fetch('https://localhost:7004/api/AppliedJobs/apply-existing', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + jwtToken
                    },
                    body: JSON.stringify({
                        jobPostId: currentJobPostId,
                        cvId: selectedCvId,
                        candidateId: candidateId
                    })
                })
                .then(res => res.json())
                .then(data => {
                    alert(data.message || 'Ứng tuyển thành công!');
                    location.reload();
                })
                .catch(() => alert('Lỗi khi ứng tuyển!'));
            } else {
                // Nộp bằng upload mới
                let file = document.getElementById('uploadCvInput').files[0];
                let cvName = document.getElementById('uploadCvName').value;
                let notes = document.getElementById('uploadCvNotes').value;
                if (!file) { alert('Vui lòng chọn hoặc upload CV!'); return; }
                if (!cvName) { alert('Vui lòng nhập tên CV!'); return; }

                document.getElementById('uploadSpinner').style.display = 'flex';
                let formData = new FormData();
                formData.append('jobPostId', currentJobPostId);
                formData.append('candidateId', candidateId);
                formData.append('file', file);
                formData.append('CVName', cvName);
                if (notes) formData.append('Notes', notes);

                fetch('https://localhost:7004/api/AppliedJobs/apply-upload', {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + jwtToken
                    },
                    body: formData
                })
                .then(res => res.json())
                .then(data => {
                    document.getElementById('uploadSpinner').style.display = 'none';
                    alert(data.message || 'Ứng tuyển thành công!');
                    setTimeout(function () {
                        location.reload();
                    }, 100);
                })
                .catch(() => {
                    document.getElementById('uploadSpinner').style.display = 'none';
                    alert('Lỗi khi ứng tuyển!');
                });
            }
        });
    </script>
    <script>
        //script validate trường salary
        const minInput = document.getElementById("salary_min");
        const maxInput = document.getElementById("salary_max");
        const applyBtn = document.getElementById("applyBtn");

            function blockInvalidInput(e) {
            // Chặn nhập dấu trừ
            if (e.key === "-" || e.key === "e") {
                e.preventDefault();
            }
        }

        function validateSalary() {
            const minVal = parseInt(minInput.value) || 0;
            const maxVal = parseInt(maxInput.value) || 0;

            let valid = true;

            // Reset trạng thái
            minInput.classList.remove("is-invalid");
            maxInput.classList.remove("is-invalid");

            // Nếu nhập 0 thì xóa luôn
            if (minVal === 0) minInput.value = "";
            if (maxVal === 0) maxInput.value = "";

            // Check điều kiện: không được <= 0
            if (minVal <= 0 && minInput.value) {
                minInput.classList.add("is-invalid");
                valid = false;
            }
            if (maxVal <= 0 && maxInput.value) {
                maxInput.classList.add("is-invalid");
                valid = false;
            }

            // Check min > max
            if (minVal > 0 && maxVal > 0 && minVal > maxVal) {
                minInput.classList.add("is-invalid");
                maxInput.classList.add("is-invalid");
                valid = false;
            }

            // Disable/Enable button
            applyBtn.disabled = !valid;
        }

            // Gắn event
        minInput.addEventListener("keypress", blockInvalidInput);
        maxInput.addEventListener("keypress", blockInvalidInput);

        minInput.addEventListener("input", validateSalary);
        maxInput.addEventListener("input", validateSalary);
    </script>
}
